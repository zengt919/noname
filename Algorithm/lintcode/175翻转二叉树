public void invertBinaryTree(TreeNode root){
    if(root == null){
        return;
    }
    Queue<TreeNode> queue = new LinkedList<>();
    queue.offer(root);
    while(!queue.isEmpty()){
        TreeNode node = queue.poll();
        TreeNode temp = node.left;
        node.left = node.right;
        node.right = temp;
        if(node.left != null){
            queue.offer(node.left);
        }
        if(node.right != null){
            queue.offer(node.right);
        }
    }
}

public void invertBinaryTree(TreeNode root){
    if(root == null){
        return;
    }
    TreeNode temp = root.left;
    root.left = root.right;
    root.right = temp;
    if(root.left != null){
        invertBinaryTree(root.left);
    }
    if(root.right != null){
        invertBinaryTree(root.right);
    }
}
